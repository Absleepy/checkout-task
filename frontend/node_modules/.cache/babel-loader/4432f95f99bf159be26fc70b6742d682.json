{"ast":null,"code":"'use strict';\n/**\r\n * Encapsulates the logic for issuing a request to the Stripe API. This is an\r\n * experimental interface and is not yet stable.\r\n */\n\nclass HttpClient {\n  /** The client name used for diagnostics. */\n  getClientName() {\n    throw new Error('getClientName not implemented.');\n  }\n\n  makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n    throw new Error('makeRequest not implemented.');\n  }\n  /** Helper to make a consistent timeout error across implementations. */\n\n\n  static makeTimeoutError() {\n    const timeoutErr = new TypeError(HttpClient.TIMEOUT_ERROR_CODE);\n    timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\n    return timeoutErr;\n  }\n\n}\n\nHttpClient.TIMEOUT_ERROR_CODE = 'ETIMEDOUT';\n\nclass HttpClientResponse {\n  constructor(statusCode, headers) {\n    this._statusCode = statusCode;\n    this._headers = headers;\n  }\n\n  getStatusCode() {\n    return this._statusCode;\n  }\n\n  getHeaders() {\n    return this._headers;\n  }\n\n  getRawResponse() {\n    throw new Error('getRawResponse not implemented.');\n  }\n\n  toStream(streamCompleteCallback) {\n    throw new Error('toStream not implemented.');\n  }\n\n  toJSON() {\n    throw new Error('toJSON not implemented.');\n  }\n\n}\n\nmodule.exports = {\n  HttpClient,\n  HttpClientResponse\n};","map":{"version":3,"sources":["D:/Abid/checkout-task/frontend/node_modules/stripe/lib/net/HttpClient.js"],"names":["HttpClient","getClientName","Error","makeRequest","host","port","path","method","headers","requestData","protocol","timeout","makeTimeoutError","timeoutErr","TypeError","TIMEOUT_ERROR_CODE","code","HttpClientResponse","constructor","statusCode","_statusCode","_headers","getStatusCode","getHeaders","getRawResponse","toStream","streamCompleteCallback","toJSON","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;AACA,MAAMA,UAAN,CAAiB;AACf;AACAC,EAAAA,aAAa,GAAG;AACd,UAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACD;;AAEDC,EAAAA,WAAW,CACTC,IADS,EAETC,IAFS,EAGTC,IAHS,EAITC,MAJS,EAKTC,OALS,EAMTC,WANS,EAOTC,QAPS,EAQTC,OARS,EAST;AACA,UAAM,IAAIT,KAAJ,CAAU,8BAAV,CAAN;AACD;AAED;;;AACuB,SAAhBU,gBAAgB,GAAG;AACxB,UAAMC,UAAU,GAAG,IAAIC,SAAJ,CAAcd,UAAU,CAACe,kBAAzB,CAAnB;AACAF,IAAAA,UAAU,CAACG,IAAX,GAAkBhB,UAAU,CAACe,kBAA7B;AACA,WAAOF,UAAP;AACD;;AAxBc;;AA2BjBb,UAAU,CAACe,kBAAX,GAAgC,WAAhC;;AAEA,MAAME,kBAAN,CAAyB;AACvBC,EAAAA,WAAW,CAACC,UAAD,EAAaX,OAAb,EAAsB;AAC/B,SAAKY,WAAL,GAAmBD,UAAnB;AACA,SAAKE,QAAL,GAAgBb,OAAhB;AACD;;AAEDc,EAAAA,aAAa,GAAG;AACd,WAAO,KAAKF,WAAZ;AACD;;AAEDG,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKF,QAAZ;AACD;;AAEDG,EAAAA,cAAc,GAAG;AACf,UAAM,IAAItB,KAAJ,CAAU,iCAAV,CAAN;AACD;;AAEDuB,EAAAA,QAAQ,CAACC,sBAAD,EAAyB;AAC/B,UAAM,IAAIxB,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAEDyB,EAAAA,MAAM,GAAG;AACP,UAAM,IAAIzB,KAAJ,CAAU,yBAAV,CAAN;AACD;;AAxBsB;;AA2BzB0B,MAAM,CAACC,OAAP,GAAiB;AAAC7B,EAAAA,UAAD;AAAaiB,EAAAA;AAAb,CAAjB","sourcesContent":["'use strict';\r\n\r\n/**\r\n * Encapsulates the logic for issuing a request to the Stripe API. This is an\r\n * experimental interface and is not yet stable.\r\n */\r\nclass HttpClient {\r\n  /** The client name used for diagnostics. */\r\n  getClientName() {\r\n    throw new Error('getClientName not implemented.');\r\n  }\r\n\r\n  makeRequest(\r\n    host,\r\n    port,\r\n    path,\r\n    method,\r\n    headers,\r\n    requestData,\r\n    protocol,\r\n    timeout\r\n  ) {\r\n    throw new Error('makeRequest not implemented.');\r\n  }\r\n\r\n  /** Helper to make a consistent timeout error across implementations. */\r\n  static makeTimeoutError() {\r\n    const timeoutErr = new TypeError(HttpClient.TIMEOUT_ERROR_CODE);\r\n    timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\r\n    return timeoutErr;\r\n  }\r\n}\r\n\r\nHttpClient.TIMEOUT_ERROR_CODE = 'ETIMEDOUT';\r\n\r\nclass HttpClientResponse {\r\n  constructor(statusCode, headers) {\r\n    this._statusCode = statusCode;\r\n    this._headers = headers;\r\n  }\r\n\r\n  getStatusCode() {\r\n    return this._statusCode;\r\n  }\r\n\r\n  getHeaders() {\r\n    return this._headers;\r\n  }\r\n\r\n  getRawResponse() {\r\n    throw new Error('getRawResponse not implemented.');\r\n  }\r\n\r\n  toStream(streamCompleteCallback) {\r\n    throw new Error('toStream not implemented.');\r\n  }\r\n\r\n  toJSON() {\r\n    throw new Error('toJSON not implemented.');\r\n  }\r\n}\r\n\r\nmodule.exports = {HttpClient, HttpClientResponse};\r\n"]},"metadata":{},"sourceType":"script"}